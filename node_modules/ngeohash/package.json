{
  "author": {
    "name": "Sun Ning",
    "email": "classicning@gmail.com",
    "url": "http://sunng.info/"
  },
  "name": "ngeohash",
  "description": "geohash library for nodejs",
  "version": "0.2.0",
  "repository": {
    "url": "https://github.com/sunng87/node-geohash"
  },
  "engines": {
    "node": ">=v0.2.0"
  },
  "dependencies": {},
  "devDependencies": {},
  "main": "./main",
  "readme": "node-geohash\n============\n\nGeohash library for nodejs.\n\nInstall\n-------\n\n    npm install ngeohash\n\nUsage\n-----\n\n    var geohash = require('geohash');\n    sys.puts(geohash.encode(37.8324, 112.5584));\n    // prints ww8p1r4t8\n    var latlon = geohash.decode('ww8p1r4t8');\n    sys.puts(latlon.latitude);\n    sys.puts(latlon.longitude);\n\n### geohash.encode (latitude, longitude, precision=9)\n\nEncode a pair of latitude and longitude into geohash. The third argument is\noptional, you can specify a length of this hash string, which also affect on\nthe precision of the geohash.\n\n### geohash.decode (hashstring)\n\nDecode a hash string into pair of latitude and longitude. A javascript object\nis returned with key `latitude` and `longitude`.\n\n### geohash.neighbor (hashstring, direction)\n\nFind neighbor of a geohash string in certain direction. Direction is a \ntwo-element array, i.e. [1,0] means north, [-1,-1] means southwest.\n\n### geohash.decode_bbox (hashstring)\n\nDecode hashstring into a bound box matches it. Data returned in a four-element\narray: [minlat, minlon, maxlat, maxlon]\n\nAbout Geohash\n-------------\n\nCheck [Wikipedia](http://en.wikipedia.org/wiki/Geohash \"Wiki page for geohash\")\nfor more information.\n    \n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/sunng87/node-geohash/issues"
  },
  "homepage": "https://github.com/sunng87/node-geohash",
  "_id": "ngeohash@0.2.0",
  "dist": {
    "shasum": "c113760e76b001ce26348c72328cd463fc7d45c3"
  },
  "_from": "ngeohash@",
  "_resolved": "https://registry.npmjs.org/ngeohash/-/ngeohash-0.2.0.tgz"
}
